name: Cross-Compile Fyne Application

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  release-linux-amd64:
    name: release linux/amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install fyne-cross and build for Windows
        run: |
          apt-get -y update && apt-get -y install mingw-w64
          go install github.com/fyne-io/fyne-cross@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          fyne-cross windows -arch amd64

      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.BUILD }}
          goos: windows
          goarch: amd64
          binary_name: GopherLetics_Windows_AMD64
          # The fyne-cross output directory is usually fyne-cross/dist/<os>-<arch>
          # We need to specify the path to the binary within that directory.
          # Assuming the binary name is GopherLetics_Windows_AMD64
          # The actual path will be fyne-cross/dist/windows-amd64/GopherLetics_Windows_AMD64
          # The go-release-action expects the binary to be in the root of the repository
          # so we need to move it.
          pre_command: "mv fyne-cross/dist/windows-amd64/GopherLetics_Windows_AMD64 ."

  release-windows-amd64:
    name: release windows/amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build with fyne-cross for Linux
        run: |
          go install github.com/fyne-io/fyne-cross@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          fyne-cross linux -arch amd64

      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.BUILD }}
          goos: linux
          goarch: amd64
          binary_name: GopherLetics_Linux_AMD64
          pre_command: "mv fyne-cross/dist/linux-amd64/GopherLetics_Linux_AMD64 ."